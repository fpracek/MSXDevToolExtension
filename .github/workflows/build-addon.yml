name: Build Addon

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Build addon
        run: |
          npm install -g node-gyp
          cd addon
          node-gyp configure
          node-gyp build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myaddon-windows-x64
          path: addon/build/Release/*.node

  build-macos-x64:
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Build addon
        run: |
          npm install -g node-gyp
          cd addon
          node-gyp configure
          node-gyp build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myaddon-macos-x64
          path: addon/build/Release/*.node

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Attempt ARM64 cross-compile on Intel mac
        run: |
          npm install -g node-gyp
          export CXXFLAGS="-arch arm64 -mmacosx-version-min=11.0"
          export LDFLAGS="-arch arm64 -mmacosx-version-min=11.0"
          cd addon
          node-gyp configure -- -f xcode
          node-gyp build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myaddon-macos-arm64
          path: addon/build/Release/*.node

  build-linux-glibc-old:
    runs-on: ubuntu-latest
    container:
      image: node:18-bullseye-slim
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Build addon
        run: |
          npm install -g node-gyp
          cd addon
          node-gyp configure
          node-gyp build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myaddon-linux-glibc
          path: addon/build/Release/*.node

  build-linux-alpine:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Build addon on Alpine (musl)
        run: |
          apk add --no-cache python3 make g++
          npm install -g node-gyp
          cd addon
          node-gyp configure
          node-gyp build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myaddon-alpine
          path: addon/build/Release/*.node

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU for ARM
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest

      - name: Install Node & build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 make g++
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install -g node-gyp

      - name: Build addon (ARM64 cross-compile)
        run: |
          cd addon
          node-gyp configure --arch=arm64
          node-gyp build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myaddon-linux-arm64
          path: addon/build/Release/*.node